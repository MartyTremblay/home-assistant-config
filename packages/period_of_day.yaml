- platform: template
 sensors:
   period_of_day:
     friendly_name: 'period of the day'
     value_template: >-
       {% if (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}
         dusk
       {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}
         dawn
       {% elif (states.sun.sun.attributes.elevation) < -4 %}
         night
       {% else %}
         day
       {% endif %}
     icon_template: >-
       {% if (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}
         mdi:weather-sunset-down
       {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}
         mdi:weather-sunset-up
       {% elif (states.sun.sun.attributes.elevation) < -4 %}
         mdi:weather-night
       {% else %}
         mdi:weather-sunny
       {% endif %}

- alias: 'turn on light when it is dusk'
    trigger:
      platform: time
      # Matches every 1 minutes
      minutes: '/1'
    condition:
      - condition: template
        value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
    action:
      - service: homeassistant.turn_on
        entity_id: light.family_room_floor_light_level
