- alias: 'Marty Away'
  condition:
    condition: state
    entity_id: input_boolean.martyhome
    state: 'on'
  trigger:
    - platform: state
      entity_id: device_tracker.androidbf1392b7f2ba2bce
      state: 'not_home'
      for:
        minutes: 10
    - platform: state
      entity_id: device_tracker.martyszuk1_z1
      state: 'not_home'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.martyhome
    - service: logbook.log
      data_template:
        name: "Marty away: "
        message: >-
          {%- for state in states.device_tracker if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Away.
          {%- endfor -%}

- alias: 'Marty Home'
  condition:
    condition: state
    entity_id: input_boolean.martyhome
    state: 'off'
  trigger:
    - platform: state
      entity_id: device_tracker.martyszuk1_z1, device_tracker.androidbf1392b7f2ba2bce
      state: 'home'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.martyhome
    - service: logbook.log
      data_template:
        name: "Marty home: "
        message: >-
          {%- for state in states.device_tracker if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Home.
          {%- endfor -%}

# ------- Vitoria --------
- alias: 'Viktoria Away'
  condition:
    condition: state
    entity_id: input_boolean.viktoriahome
    state: 'on'
  trigger:
    - platform: state
      entity_id: device_tracker.viktoriasiphone
      state: 'not_home'
      for:
        minutes: 10
    - platform: state
      entity_id: device_tracker.viktoriaiphone_vt
      state: 'not_home'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.viktoriahome
    - service: logbook.log
      data_template:
        name: "Viktoria away: "
        message: >-
          {%- for state in states.device_tracker if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Away.
          {%- endfor -%}

- alias: 'Viktoria Home'
  condition:
    condition: state
    entity_id: input_boolean.viktoriahome
    state: 'off'
  trigger:
    - platform: state
      entity_id: device_tracker.viktoriasiphone, device_tracker.viktoriaiphone_vt
      state: 'home'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.viktoriahome
    - service: logbook.log
      data_template:
        name: "Viktoria home: "
        message: >-
          {%- for state in states.device_tracker if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Home.
          {%- endfor -%}

- alias: Arm the AWAY alarm
  trigger:
    platform: state
    entity_id: group.family
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.alarm_mode
        state: 'automatic'
  action:
    service: mqtt.publish
    data:
      topic: home/alarm/set
      payload: 'ARM_AWAY'
      qos: 1

- alias: Disarm the AWAY alarm
  trigger:
    platform: state
    entity_id: group.family
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.alarm_mode
        state: 'automatic'
  action:
    service: mqtt.publish
    data:
      topic: home/alarm/set
      payload: 'DISARM'
      qos: 1

- alias: Arm the alarm HOME at 12:00am
  trigger:
    platform: time
    after: '00:23:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.alarm_mode
        state: 'automatic'
      - condition: state
        entity_id: group.family
        state: 'on'
  action:
    service: mqtt.publish
    data:
      topic: home/alarm/set
      payload: 'ARM_HOME'
      qos: 1

- alias: Disarm the alarm HOME at 6:00am
  trigger:
    platform: time
    after: '06:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.alarm_mode
        state: 'automatic'
      - condition: state
        entity_id: group.family
        state: 'on'
  action:
    service: mqtt.publish
    data:
      topic: home/alarm/set
      payload: 'DISARM'
      qos: 1

- alias: Mains power is back online
  trigger:
    platform: state
    entity_id: binary_sensor.ups_online_status
    from: 'off'
    to: 'on'
  action:
    service: notify.pushbullet_notify
    data:
      message: "Mains Power is back Online!"
      title: "Mains Power is back Online!"

- alias: Mains power is down
  trigger:
    platform: state
    entity_id: binary_sensor.ups_online_status
    from: 'on'
    to: 'off'
  action:
    service: notify.pushbullet_notify
    data:
      message: "Mains Power is Down!"
      title: "Mains Power is Down!"

- alias: "Update Available Notification"
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: pushbullet.trigger
    data: {"event":"device_status", "value1":"Home Assistant Update: ", "value2":"Available"}

- alias: 'Set night_vision off when sun rises'
  trigger:
      platform: sun
      event: sunrise
      offset: '+00:00:00'
  action:
      service: switch.night_vision_off

- alias: 'Set night_vision on when sun sets'
  trigger:
      platform: sun
      event: sunset
      offset: '+00:00:00'
  action:
      service: nswitch.night_vision_on
